import{p as d,a$ as B,W as I,b0 as R,g as i,C as U,b1 as $,ac as _,o as D,c as m,b2 as M,b3 as u,b4 as c,d as n,F as r,m as N,e as T,u as W}from"./index.d5c9cb03.js";import"./VRow.c4ad1a98.js";const j=d({...B(),...I(R(),["inline"])},"VCheckbox"),H=i()({name:"VCheckbox",inheritAttrs:!1,props:j(),emits:{"update:modelValue":e=>!0,"update:focused":e=>!0},setup(e,t){let{attrs:o,slots:s}=t;const a=U(e,"modelValue"),{isFocused:V,focus:b,blur:p}=$(e),k=_(),f=D(()=>e.id||`checkbox-${k}`);return m(()=>{const[v,C]=M(o),[x,w]=u.filterProps(e),[P,z]=c.filterProps(e);return n(u,r({class:["v-checkbox",e.class]},v,x,{modelValue:a.value,"onUpdate:modelValue":l=>a.value=l,id:f.value,focused:V.value,style:e.style}),{...s,default:l=>{let{id:h,messagesId:y,isDisabled:g,isReadonly:F}=l;return n(c,r(P,{id:h.value,"aria-describedby":y.value,disabled:g.value,readonly:F.value},C,{modelValue:a.value,"onUpdate:modelValue":A=>a.value=A,onFocus:b,onBlur:p}),s)}})}),{}}}),q=d({fluid:{type:Boolean,default:!1},...N(),...T()},"VContainer"),J=i()({name:"VContainer",props:q(),setup(e,t){let{slots:o}=t;const{rtlClasses:s}=W();return m(()=>n(e.tag,{class:["v-container",{"v-container--fluid":e.fluid},s.value,e.class],style:e.style},o)),{}}});export{J as V,H as a};
